# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: Default

parameters:
  - name: wizClientid
    type: string
    default: 'wgxq75hrlndpbktx3eupevf2x3zwrl6mluqfnzev2oh2a7s5zmzhg'
  - name: wizDebug
    type: boolean
    default: false
  - name: wizPolicyHitsOnly
    type: boolean
    default: true
  - name: wizScanPolicies
    type: string
    default: "thuan-test-wizcli"
  - name: wizSucceedOnFailures
    type: boolean
    default: false
    
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

# - task: wiz@0
#   displayName: Scan directory
#   inputs:
#     command: dir
#     clientid: ${{ parameters.wizClientid}}
#     secret: $(WIZ_CLIENT_SECRET)
#     succeedOnFailures: ${{ parameters.wizSucceedOnFailures}}
#     policyHitsOnly: ${{ parameters.wizPolicyHitsOnly}}
#     scanPolicies: ${{ parameters.wizScanPolicies }}
#     scanTags: directory
#     wizCliPath: '/Users/thuan.dang/tmp'
#     path: ${{ parameters.wizPath }}
#     debug: ${{ parameters.wizDebug }}


# - task: CmdLine@2
#   inputs:
#     script: |
#       echo "##[command]Obtaining WizCLI from the inter-webs..."
#       sudo curl -o /usr/bin/wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
#       echo "##[command]Making WizCLI executable"
#       sudo chmod +x /usr/bin/wizcli
#       /usr/bin/./wizcli auth --id ${{ parameters.wizClientid}} --secret $(WIZ_CLIENT_SECRET)
#   displayName: Download latest WizCLI and Authenticate


- task: wiz@0
  inputs:
    command: 'image'
    clientid: '${{ parameters.wizClientid}}'
    secret: '$(WIZ_CLIENT_SECRET)'
    image: 'docker-username/hello-container'
    policyHitsOnly: true
    fileHashesScan: true
    scanSecrets: false
    scanPolicies: '${{ parameters.wizScanPolicies }}'
    scanTags: 'cicd=ado,build=56,golang'
    wizCliPath: '~'
